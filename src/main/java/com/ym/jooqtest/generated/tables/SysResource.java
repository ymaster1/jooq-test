/*
 * This file is generated by jOOQ.
 */
package com.ym.jooqtest.generated.tables;


import com.ym.jooqtest.generated.Indexes;
import com.ym.jooqtest.generated.Keys;
import com.ym.jooqtest.generated.Study;
import com.ym.jooqtest.generated.tables.records.SysResourceRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 系统资源表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysResource extends TableImpl<SysResourceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>study.sys_resource</code>
     */
    public static final SysResource SYS_RESOURCE = new SysResource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysResourceRecord> getRecordType() {
        return SysResourceRecord.class;
    }

    /**
     * The column <code>study.sys_resource.id</code>. 主键id
     */
    public final TableField<SysResourceRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>study.sys_resource.resource_code</code>. 资源编码
     */
    public final TableField<SysResourceRecord, String> RESOURCE_CODE = createField(DSL.name("resource_code"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "资源编码");

    /**
     * The column <code>study.sys_resource.resource_desc</code>. 资源描述
     */
    public final TableField<SysResourceRecord, String> RESOURCE_DESC = createField(DSL.name("resource_desc"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "资源描述");

    /**
     * The column <code>study.sys_resource.status_flag</code>. 是否可用 0 不可用 1可用
     */
    public final TableField<SysResourceRecord, Byte> STATUS_FLAG = createField(DSL.name("status_flag"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "是否可用 0 不可用 1可用");

    /**
     * The column <code>study.sys_resource.server_create_time</code>. 系统创建时间
     */
    public final TableField<SysResourceRecord, LocalDateTime> SERVER_CREATE_TIME = createField(DSL.name("server_create_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "系统创建时间");

    /**
     * The column <code>study.sys_resource.server_update_time</code>. 系统更新时间
     */
    public final TableField<SysResourceRecord, LocalDateTime> SERVER_UPDATE_TIME = createField(DSL.name("server_update_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "系统更新时间");

    private SysResource(Name alias, Table<SysResourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysResource(Name alias, Table<SysResourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("系统资源表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>study.sys_resource</code> table reference
     */
    public SysResource(String alias) {
        this(DSL.name(alias), SYS_RESOURCE);
    }

    /**
     * Create an aliased <code>study.sys_resource</code> table reference
     */
    public SysResource(Name alias) {
        this(alias, SYS_RESOURCE);
    }

    /**
     * Create a <code>study.sys_resource</code> table reference
     */
    public SysResource() {
        this(DSL.name("sys_resource"), null);
    }

    public <O extends Record> SysResource(Table<O> child, ForeignKey<O, SysResourceRecord> key) {
        super(child, key, SYS_RESOURCE);
    }

    @Override
    public Schema getSchema() {
        return Study.STUDY;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_RESOURCE_IDX_SERVER_CREATE_TIME);
    }

    @Override
    public Identity<SysResourceRecord, Long> getIdentity() {
        return (Identity<SysResourceRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SysResourceRecord> getPrimaryKey() {
        return Keys.KEY_SYS_RESOURCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysResourceRecord>> getKeys() {
        return Arrays.<UniqueKey<SysResourceRecord>>asList(Keys.KEY_SYS_RESOURCE_PRIMARY);
    }

    @Override
    public SysResource as(String alias) {
        return new SysResource(DSL.name(alias), this);
    }

    @Override
    public SysResource as(Name alias) {
        return new SysResource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysResource rename(String name) {
        return new SysResource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysResource rename(Name name) {
        return new SysResource(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
