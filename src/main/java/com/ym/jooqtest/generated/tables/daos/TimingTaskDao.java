/*
 * This file is generated by jOOQ.
 */
package com.ym.jooqtest.generated.tables.daos;


import com.ym.jooqtest.generated.tables.TimingTask;
import com.ym.jooqtest.generated.tables.records.TimingTaskRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 定时任务表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimingTaskDao extends DAOImpl<TimingTaskRecord, com.ym.jooqtest.generated.tables.pojos.TimingTask, Long> {

    /**
     * Create a new TimingTaskDao without any configuration
     */
    public TimingTaskDao() {
        super(TimingTask.TIMING_TASK, com.ym.jooqtest.generated.tables.pojos.TimingTask.class);
    }

    /**
     * Create a new TimingTaskDao with an attached configuration
     */
    public TimingTaskDao(Configuration configuration) {
        super(TimingTask.TIMING_TASK, com.ym.jooqtest.generated.tables.pojos.TimingTask.class, configuration);
    }

    @Override
    public Long getId(com.ym.jooqtest.generated.tables.pojos.TimingTask object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchById(Long... values) {
        return fetch(TimingTask.TIMING_TASK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ym.jooqtest.generated.tables.pojos.TimingTask fetchOneById(Long value) {
        return fetchOne(TimingTask.TIMING_TASK.ID, value);
    }

    /**
     * Fetch records that have <code>task_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfTaskName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.TASK_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_name IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByTaskName(String... values) {
        return fetch(TimingTask.TIMING_TASK.TASK_NAME, values);
    }

    /**
     * Fetch records that have <code>service_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfServiceName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.SERVICE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>service_name IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByServiceName(String... values) {
        return fetch(TimingTask.TIMING_TASK.SERVICE_NAME, values);
    }

    /**
     * Fetch records that have <code>task_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfTaskStatus(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.TASK_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_status IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByTaskStatus(Byte... values) {
        return fetch(TimingTask.TIMING_TASK.TASK_STATUS, values);
    }

    /**
     * Fetch records that have <code>task_cron BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfTaskCron(String lowerInclusive, String upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.TASK_CRON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_cron IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByTaskCron(String... values) {
        return fetch(TimingTask.TIMING_TASK.TASK_CRON, values);
    }

    /**
     * Fetch records that have <code>task_desc BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfTaskDesc(String lowerInclusive, String upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.TASK_DESC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_desc IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByTaskDesc(String... values) {
        return fetch(TimingTask.TIMING_TASK.TASK_DESC, values);
    }

    /**
     * Fetch records that have <code>method_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfMethodName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.METHOD_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>method_name IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByMethodName(String... values) {
        return fetch(TimingTask.TIMING_TASK.METHOD_NAME, values);
    }

    /**
     * Fetch records that have <code>status_flag BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfStatusFlag(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.STATUS_FLAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status_flag IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByStatusFlag(Byte... values) {
        return fetch(TimingTask.TIMING_TASK.STATUS_FLAG, values);
    }

    /**
     * Fetch records that have <code>server_create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfServerCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.SERVER_CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>server_create_time IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByServerCreateTime(LocalDateTime... values) {
        return fetch(TimingTask.TIMING_TASK.SERVER_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>server_update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchRangeOfServerUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TimingTask.TIMING_TASK.SERVER_UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>server_update_time IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.TimingTask> fetchByServerUpdateTime(LocalDateTime... values) {
        return fetch(TimingTask.TIMING_TASK.SERVER_UPDATE_TIME, values);
    }
}
