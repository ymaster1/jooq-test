/*
 * This file is generated by jOOQ.
 */
package com.ym.jooqtest.generated.tables.daos;


import com.ym.jooqtest.generated.tables.UserInfo;
import com.ym.jooqtest.generated.tables.records.UserInfoRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 用户信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoDao extends DAOImpl<UserInfoRecord, com.ym.jooqtest.generated.tables.pojos.UserInfo, Long> {

    /**
     * Create a new UserInfoDao without any configuration
     */
    public UserInfoDao() {
        super(UserInfo.USER_INFO, com.ym.jooqtest.generated.tables.pojos.UserInfo.class);
    }

    /**
     * Create a new UserInfoDao with an attached configuration
     */
    public UserInfoDao(Configuration configuration) {
        super(UserInfo.USER_INFO, com.ym.jooqtest.generated.tables.pojos.UserInfo.class, configuration);
    }

    @Override
    public Long getId(com.ym.jooqtest.generated.tables.pojos.UserInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchById(Long... values) {
        return fetch(UserInfo.USER_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ym.jooqtest.generated.tables.pojos.UserInfo fetchOneById(Long value) {
        return fetchOne(UserInfo.USER_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByUserName(String... values) {
        return fetch(UserInfo.USER_INFO.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByUserId(String... values) {
        return fetch(UserInfo.USER_INFO.USER_ID, values);
    }

    /**
     * Fetch records that have <code>adder BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfAdder(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.ADDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>adder IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByAdder(String... values) {
        return fetch(UserInfo.USER_INFO.ADDER, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfSex(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchBySex(Byte... values) {
        return fetch(UserInfo.USER_INFO.SEX, values);
    }

    /**
     * Fetch records that have <code>country BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfCountry(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.COUNTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByCountry(String... values) {
        return fetch(UserInfo.USER_INFO.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByCity(String... values) {
        return fetch(UserInfo.USER_INFO.CITY, values);
    }

    /**
     * Fetch records that have <code>concat_phone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfConcatPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.CONCAT_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>concat_phone IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByConcatPhone(String... values) {
        return fetch(UserInfo.USER_INFO.CONCAT_PHONE, values);
    }

    /**
     * Fetch records that have <code>status_flag BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfStatusFlag(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.STATUS_FLAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status_flag IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByStatusFlag(Byte... values) {
        return fetch(UserInfo.USER_INFO.STATUS_FLAG, values);
    }

    /**
     * Fetch records that have <code>server_create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfServerCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.SERVER_CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>server_create_time IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByServerCreateTime(LocalDateTime... values) {
        return fetch(UserInfo.USER_INFO.SERVER_CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>server_update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchRangeOfServerUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.SERVER_UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>server_update_time IN (values)</code>
     */
    public List<com.ym.jooqtest.generated.tables.pojos.UserInfo> fetchByServerUpdateTime(LocalDateTime... values) {
        return fetch(UserInfo.USER_INFO.SERVER_UPDATE_TIME, values);
    }
}
